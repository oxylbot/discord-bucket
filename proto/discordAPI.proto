syntax = "proto2"; //Specify proto2 version.

service DiscordAPI {
    // channel getters/setters
    rpc GetChannel (GetChannelRequest) returns (ChannelResponse);
    rpc EditChannel (EditChannelRequest) returns (ChannelResponse);
    rpc DeleteChannel (DeleteChannelRequest) returns (ChannelResponse);

    // message getters/setters
    rpc GetChannelMessages (GetChannelMessagesRequest) returns (MessagesResponse);
    rpc GetChannelMessage (GetChannelMessageRequest) returns (MessageResponse);
    rpc CreateMessage (stream CreateMessageRequest) returns (MessageResponse);
    rpc EditMessage (stream EditMessageRequest) returns (MessageResponse);
    rpc DeleteMessage (DeleteMessageRequest) returns (EmptyResponse);
    rpc BulkDeleteMessages (BulkDeleteMessagesRequest) returns (EmptyResponse)
    // reaction getters/setters
    rpc CreateReaction (CreateReactionRequest) returns (EmptyResponse);
    rpc DeleteOwnReaction (DeleteOwnReactionRequest) returns (EmptyResponse);
    rpc DeleteUserReaction (DeleteUserReactionRequest) returns (EmptyResponse);
    rpc GetReactions (GetReactionsRequest) returns (UsersResponse);
    rpc DeleteAllReactions (DeleteAllReactionsRequest) returns (EmptyResponse);
    // permissions
    rpc EditChannelPermissions (EditChannelPermissionsRequest) returns (EmptyResponse);

    // Invites
    rpc GetChannelInvites (GetChannelInvitesRequest) returns (InvitesResponse)
}

// methods not 100% related to discord API
service misc {
    rpc FileTransfer(stream File) returns (UploadStatus);
}

// Request objects
message CreateMessageRequest {
    oneof test {
        CreateMessageSubRequest request = 1;
        Files files = 2;
    }
}

message CreateMessageSubRequest {
    required string channelID = 1;
    required string content = 2;
    required string uuid = 3;
    optional MessageEmbedObject embed = 4;
    optional string payload_json = 5;
    optional bool tts = 6;
}

message EditMessageRequest {
    oneof test {
        EditMessageSubRequest request = 1;
        Files files = 2;
    }
}

message EditMessageSubRequest {
    required string channelID = 1;
    required string content = 2;
    required string uuid = 3;
    optional MessageEmbedObject embed = 4;
}

message GetChannelRequest {
    required string channelID = 1;
    required string uuid = 2;
}

message EditChannelRequest {
    // All channels
    required string channelID = 1;
    required string uuid = 2;
    required string name = 3;
    required uint32 position = 4;
    repeated OverwriteObject permissionOverwrites = 10;
    // Text channels
    optional string topic = 5;
    optional bool nsfw = 6;
    optional uint32 rateLimitPerUser = 7;
    // Voice channels
    optional uint32 bitrate = 8;
    optional uint32 userLimit = 9;
    // Text + Voice (same as all but Category)
    optional string parentID = 11;
}

message DeleteChannelRequest {
    required string channelID = 1;
    required string uuid = 2;
}

message GetChannelMessageRequest {
    required string channelID = 1;
    required string messageID = 2;
    required string uuid = 3;
}

message GetChannelMessagesRequest {
    required string channelID = 1;
    required string uuid = 2;
    oneof test {
        string around = 3;
        string before = 4;
        string after = 5;
    }
    optional uint32 limit = 6;
}

message CreateReactionRequest {
    required string channelID = 1;
    required string uuid = 2;
    required string messageID = 3;
    required string emoji = 4;
}

message DeleteOwnReactionRequest {
    required string channelID = 1;
    required string uuid = 2;
    required string messageID = 3;
    required string emoji = 4;
}

message DeleteUserReactionRequest {
    required string channelID = 1;
    required string uuid = 2;
    required string messageID = 3;
    required string emoji = 4;
    required string userID = 5;
}

message GetReactionsRequest {
    required string channelID = 1;
    required string uuid = 2;
    required string messageID = 3;
    required string emoji = 4;
    oneof test {
        string before = 5;
        string after = 6;
    }
    optional uint32 limit = 7;

}

message DeleteAllReactionsRequest {
    required string channelID = 1;
    required string uuid = 2;
    required string messageID = 3;
    required string emoji = 4;
}

message DeleteMessageRequest {
    required string channelID = 1;
    required string uuid = 2;
    required string messageID = 3;
}

message BulkDeleteMessagesRequest {
    required string channelID = 1;
    required string uuid = 2;
    repeated string messages = 3;
}

message EditChannelPermissionsRequest {
    required string channelID = 1;
    required string uuid = 2;
    required string overwriteID = 3;
    required uint32 allow = 4;
    required uint32 deny = 5;
}

message GetChannelInvitesRequest {
    required string channelID = 1;
    required string uuid = 2;
}
// Response objects
message UsersResponse {
    required uint32 errorCode = 1;
    required string uuid = 2;
    repeated UserObject users = 3;
}

message MessagesResponse {
    required uint32 errorCode = 1;
    required string uuid = 2;
    repeated MessageObject message = 3;
}

message MessageResponse {
    required uint32 errorCode = 1;
    required string uuid = 2;
    optional MessageObject message = 3;
}

message ChannelResponse {
    optional ChannelObject channel = 1;
    required string uuid = 2;
    required uint32 errorCode = 3;
}

message EmptyResponse {
    required string uuid = 1;
    required uint32 errorCode = 2;
}

message InvitesResponse {
    required string uuid = 1;
    required uint32 errorCode = 2;
    repeated InviteObject invites = 3;
}
// First class objects

message InviteObject {
    required string code = 1;
    optional GuildObject guild = 2;
    required ChannelObject channel = 3;
    optional uint32 approximatePresenceCount = 4;
    optional uint32 approximateMemberCount = 5;
}

message UserObject {
    required string id = 1;
    required string username = 2;
    required string discriminator = 3;
    optional string avatar = 4;
    optional bool bot = 5;
    optional bool mfaEnabled = 6;
    optional string locale = 7;
    optional bool verified = 8;
    optional string email = 9;
}

message MemberObject {
    required UserObject user = 1;
    optional string nick = 2;
    repeated string roles = 3;
    required bool deaf = 4;
    required bool mute = 5;
}

message GuildObject {
    required string id = 1;
    required string name = 2;
    optional string icon = 3;
    optional string splash = 4;
    required string ownerID = 6;
    required string region = 8;
    required string afkChannelId = 9;
    required uint32 afkTimeout = 10;
    optional bool embedEnabled = 11;
    optional string embedChannelID = 12;
    required uint32 verificationLevel = 13;
    required uint32 defaultMessageNotifications = 14;
    required uint32 explicitContentFilter = 15;
    repeated RoleObject roles = 16;
    repeated EmojiObject emojis = 17;
    repeated string features = 18;
    required uint32 mfaLevel = 19;
    optional string applicationID = 20;
    optional bool widgetEnabled = 21;
    optional string widgetChannelID = 22;
    required string systemChannelID = 23;
    optional string joinedAt = 24;
    optional bool large = 25;
    optional bool unavailable = 26;
    repeated VoiceStateObject voiceStates = 27;
    repeated MemberObject members = 28;
    repeated ChannelObject channels = 29;
    repeated PresenceUpdateObject presences = 30;

    // fields used when GuildObject is used in the context of a MemberObject
    optional bool owner = 5;
    optional uint32 UserPermission = 7;
}

message ChannelObject {
    required string id = 1;
    required uint32 type = 2;
    optional string guildID = 3;
    optional uint32 position = 4;
    repeated OverwriteObject permissionOverwrite = 5;
    optional string name = 6;
    optional string topic = 7;
    optional bool nsfw = 8;
    optional string lastMessageID = 9;
    optional uint32 bitrate = 10;
    optional uint32 userLimit = 11;
    optional uint32 rateLimitPerUser = 12;
}

message RoleObject {
    required string id = 1;
    required string name = 2;
    required uint32 color = 3;
    required bool hoist = 4;
    required uint32 position = 5;
    required uint32 permissions = 6;
    required bool managed = 7;
    required bool mentionable = 8;
}

message EmojiObject {
    required string id = 1;
    required string name = 2;
    repeated RoleObject roles = 3;
    optional UserObject user = 4;
    optional bool requireColons = 5;
    optional bool managed = 6;
    optional bool animated = 7;
}

message VoiceStateObject {
    optional string guildID = 1;
    required string channelID = 2;
    required string userID = 3;
    optional MemberObject member = 4;
    required string sessionID = 5;
    required bool deaf = 6;
    required bool mute = 7;
    required bool selfDeaf = 8;
    required bool selfMute = 9;
    required bool suppress = 10;
}

message PresenceUpdateObject {
    required UserObject user = 1;
    repeated string roles = 2;
    optional ActivityObject game = 3;
    required string guildID = 4;
    required string status = 5;
    repeated ActivityObject activities = 6;
}

message ActivityObject {
    required string name = 1;
    required uint32 type = 2;
    optional string url = 3;
    optional ActivityTimestampsObject timestamps = 4;
    optional string applicationID = 5;
    optional string details = 6;
    optional string state = 7;
    optional ActivityPartyObject party = 8;
    optional ActivityAssetsObject asset = 9;
    optional ActivitySecretsObject secrets = 10;
    optional bool instance = 11;
    optional uint32 flags = 12;
}

message MessageObject {
    required string channelID = 1;
    required string messageID = 2;
    required string userID = 3;
    required string content = 4;

    optional string guildID = 5;
    optional bool pinned = 6;
    optional uint32 type = 7;
    optional string webhookID = 8;
    optional string editedTimestamp = 9;
    optional bool mentionEveryone = 10;
    repeated UserObject mentions = 11;
    repeated RoleObject mentionRoles = 12;
    repeated Attachment attachments = 13;
    repeated MessageEmbedObject embeds = 14;
    repeated ReactionObject reactions = 15;

}

message MessageEmbedObject {
    optional string title = 1;
    optional string type = 2;
    optional string description = 4;
    optional string url = 5;
    optional uint64 timestamp = 6;
    optional uint32 color = 7;
    optional MessageEmbedFooter footer = 8;
    optional MessageEmbedImage image = 9;
    optional MessageEmbedThumbnail thumbnail = 10;
    optional MessageEmbedVideo video = 11;
    optional MessageEmbedAuthor author = 12;
    repeated MessageEmbedField fields = 13;
}

// Second tier objects
message InviteMetadataObject {
    required UserObject inviter = 1;
    required uint32 uses = 2;
    required uint32 maxUses = 3;
    required uint32 maxAge = 4;
    required bool temporary = 5;
    required uint32 createdAt = 6;
    required bool revoked = 7;
}

message ActivityTimestampsObject {
    optional uint32 start = 1;
    optional uint32 end = 2;
}

message ActivityPartyObject {
    optional string id = 1;
    repeated uint32 size = 2;
}

message ActivityAssetsObject {
    optional string largeImage = 1;
    optional string largeText = 2;
    optional string smallImage = 3;
    optional string smallText = 4;
}

message ActivitySecretsObject {
    optional string join = 1;
    optional string spectate = 2;
    optional string match = 3;
}

message MessageActivityObject {
    required uint32 type = 1;
    optional string partyID = 2;
}

message MessageApplicationObject {
    required string id = 1;
    required string coverImage = 2;
    required string description = 3;
    required string icon = 4;
    required string name = 5;
}

message ReactionObject {
    required uint32 count = 1;
    required bool me = 2;
    required EmojiObject emoji = 3;
}

message Attachments {
    repeated Attachment attachments = 1;
}

message Attachment {
    required string id = 1;
    required string filename = 2;
    required uint32 size = 3;
    required string url = 4;
    required string proxyURL = 5;
    optional uint32 height = 6;
    optional uint32 width = 7;
}

message Files {
    repeated File files = 1;
}

message File {
    required bytes file = 1;
}

message UploadStatus {
    required string uuid = 1;
    required uint32 errorCode = 2;
}

message OverwriteObject {
    required string id = 1;
    required string type = 2;
    required uint32 allow = 3;
    required uint32 deny = 4;
}


message MessageEmbedFooter {
    required string text = 1;
    optional string icon_url = 2;
    optional string proxy_icon = 3;
}

message MessageEmbedImage {
    optional string url = 1;
    optional string proxy_url = 2;
    optional int32 height = 3;
    optional int32 width = 4;
}

message MessageEmbedThumbnail {
    optional string url = 1;
    optional string proxy_url = 2;
    optional int32 height = 3;
    optional int32 width = 4;
}

message MessageEmbedVideo {
    optional string url = 1;
    optional int32 height = 3;
    optional int32 width = 4;
}

message MessageEmbedAuthor {
    optional string name = 1;
    optional string url = 2;
    optional string icon_url = 3;
    optional string proxy_icon_url = 4;
}

message MessageEmbedField {
    required string name = 1;
    required string value = 2;
    optional bool inline = 3;
}

